{"ast":null,"code":"var _jsxFileName = \"/Users/robz/development/profilemanager/react_mongo_accounts/src/components/App.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport { Route, Switch } from 'react-router-dom';\nimport Dashboard from './Dashboard';\nimport Home from './Home';\nimport NoMatch from './NoMatch';\nimport CreateAccont from './CreateAccont'; // alert\n\nimport Alert from 'react-s-alert';\nimport 'react-s-alert/dist/s-alert-default.css';\nimport 'react-s-alert/dist/s-alert-css-effects/slide.css'; // API\n\nimport * as MyAPI from '../utils/MyAPI'; // redux\n\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { LOCAL_STRAGE_KEY } from '../utils/Settings';\nimport { loginWithEmailRedux } from '../actions/UserActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.signinWithTokenRequest = login_token => {\n      // login with token\n      const param = {\n        login_token: login_token\n      };\n      MyAPI.signinWithToken(param).then(data => {\n        return new Promise((resolve, reject) => {\n          if (data.status !== 'success') {\n            reject('error');\n          } else {\n            // success\n            const params = {\n              user: data.user,\n              login_token: data.login_token\n            };\n            localStorage.setItem(LOCAL_STRAGE_KEY, JSON.stringify(params));\n            this.props.mapDispatchToLoginWithPassword(params);\n            resolve();\n          }\n        });\n      }).catch(err => {\n        console.log(\"err:\", err);\n        localStorage.removeItem(LOCAL_STRAGE_KEY);\n      });\n    };\n  }\n\n  componentDidMount() {\n    // Login check\n    const storage_data = localStorage.getItem(LOCAL_STRAGE_KEY);\n\n    if (!storage_data) {\n      return;\n    }\n\n    const storage_json = JSON.parse(storage_data);\n\n    if (storage_json && storage_json.login_token) {\n      this.signinWithTokenRequest(storage_json.login_token);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          render: () => /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/notfound\",\n          component: NoMatch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/dashboard\",\n          render: () => /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/create_acount\",\n          render: () => /*#__PURE__*/_jsxDEV(CreateAccont, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          component: NoMatch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        stack: {\n          limit: 3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  categories\n}) {\n  return {\n    categories\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mapDispatchToLoginWithPassword: data => dispatch(loginWithEmailRedux({\n      params: data\n    }))\n  };\n} // export default App;\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));","map":{"version":3,"sources":["/Users/robz/development/profilemanager/react_mongo_accounts/src/components/App.js"],"names":["React","Component","Route","Switch","Dashboard","Home","NoMatch","CreateAccont","Alert","MyAPI","connect","withRouter","LOCAL_STRAGE_KEY","loginWithEmailRedux","App","signinWithTokenRequest","login_token","param","signinWithToken","then","data","Promise","resolve","reject","status","params","user","localStorage","setItem","JSON","stringify","props","mapDispatchToLoginWithPassword","catch","err","console","log","removeItem","componentDidMount","storage_data","getItem","storage_json","parse","render","limit","mapStateToProps","categories","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\n\nimport { Route, Switch } from 'react-router-dom'\nimport Dashboard from './Dashboard'\nimport Home from './Home'\nimport NoMatch from './NoMatch'\nimport CreateAccont from './CreateAccont'\n\n// alert\nimport Alert from 'react-s-alert';\nimport 'react-s-alert/dist/s-alert-default.css';\nimport 'react-s-alert/dist/s-alert-css-effects/slide.css';\n\n// API\nimport * as MyAPI from '../utils/MyAPI'\n\n// redux\nimport { connect } from 'react-redux'\n\nimport { withRouter } from 'react-router';\n\nimport { LOCAL_STRAGE_KEY } from '../utils/Settings'\nimport { loginWithEmailRedux } from '../actions/UserActions'\n\nclass App extends Component {\n\n  componentDidMount() {\n    // Login check\n\n    const storage_data = localStorage.getItem(LOCAL_STRAGE_KEY)\n    if (!storage_data) {\n      return;\n    }\n\n    const storage_json = JSON.parse(storage_data)\n    if ( storage_json && storage_json.login_token ) {\n      this.signinWithTokenRequest(storage_json.login_token)\n    }\n  }\n\n  signinWithTokenRequest = (login_token) => {\n    // login with token\n\n    const param = {\n      login_token: login_token\n    }\n\n    MyAPI.signinWithToken(param)\n    .then((data) => {\n\n\n      return new Promise((resolve, reject) => {\n\n        if (data.status !== 'success'){\n          reject('error')\n        } else {\n          // success\n          const params = {\n            user: data.user,\n            login_token: data.login_token,\n          }\n          localStorage.setItem(LOCAL_STRAGE_KEY, JSON.stringify(params))\n          this.props.mapDispatchToLoginWithPassword(params)\n          resolve()\n        }\n      })\n    })\n    .catch((err) => {\n      console.log(\"err:\", err)\n      localStorage.removeItem(LOCAL_STRAGE_KEY);\n    })\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n\n        <Switch>\n\n          <Route exact path='/' render={() => (\n            <Home />\n          )} />\n\n          <Route exact path='/notfound' component={NoMatch} />\n\n          <Route exact path='/dashboard' render={() => (\n            <Dashboard />\n          )} />\n\n\n          <Route exact path='/create_acount' render={() => (\n            <CreateAccont />\n          )} />\n\n          <Route component={NoMatch} />\n\n        </Switch>\n\n        <Alert stack={{limit: 3}} />\n\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps ({ categories }) {\n  return {\n    categories,\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    mapDispatchToLoginWithPassword: (data) => dispatch(loginWithEmailRedux({ params: data})),\n  }\n}\n\n// export default App;\nexport default withRouter(connect( mapStateToProps, mapDispatchToProps )(App))\n"]},"metadata":{},"sourceType":"module"}
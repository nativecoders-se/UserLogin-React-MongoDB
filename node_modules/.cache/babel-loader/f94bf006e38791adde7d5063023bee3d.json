{"ast":null,"code":"var _jsxFileName = \"/Users/robz/development/profilemanager/react_mongo_accounts/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker'; // react-router-dom\n\nimport { BrowserRouter } from 'react-router-dom'; // redux\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reducer from './reducers';\nimport { Provider } from 'react-redux'; // css\n\nimport 'semantic-ui-css/semantic.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst logger = store => next => action => {\n  console.group(action.type);\n  console.info('dispatching', action);\n  let result = next(action);\n  console.log('next state', store.getState());\n  console.groupEnd(action.type);\n  return result;\n};\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(logger)));\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 36,\n  columnNumber: 3\n}, this), document.getElementById('root'));\nregisterServiceWorker();","map":{"version":3,"sources":["/Users/robz/development/profilemanager/react_mongo_accounts/src/index.js"],"names":["React","ReactDOM","App","registerServiceWorker","BrowserRouter","createStore","applyMiddleware","compose","reducer","Provider","logger","store","next","action","console","group","type","info","result","log","getState","groupEnd","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC,C,CAEA;;AACA,SAASC,aAAT,QAA8B,kBAA9B,C,CAEA;;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,QAAT,QAAyB,aAAzB,C,CAEA;;AACA,OAAO,kCAAP;;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAIC,IAAI,IAAIC,MAAM,IAAI;AACxCC,EAAAA,OAAO,CAACC,KAAR,CAAcF,MAAM,CAACG,IAArB;AACAF,EAAAA,OAAO,CAACG,IAAR,CAAa,aAAb,EAA4BJ,MAA5B;AACA,MAAIK,MAAM,GAAGN,IAAI,CAACC,MAAD,CAAjB;AACAC,EAAAA,OAAO,CAACK,GAAR,CAAY,YAAZ,EAA0BR,KAAK,CAACS,QAAN,EAA1B;AACAN,EAAAA,OAAO,CAACO,QAAR,CAAiBR,MAAM,CAACG,IAAxB;AACA,SAAOE,MAAP;AACD,CAPD;;AAQA,MAAMI,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CjB,OAAxE;AACA,MAAMI,KAAK,GAAGN,WAAW,CACvBG,OADuB,EAEvBc,gBAAgB,CACdhB,eAAe,CAACI,MAAD,CADD,CAFO,CAAzB;AAOAT,QAAQ,CAACwB,MAAT,eACE,QAAC,QAAD;AAAU,EAAA,KAAK,EAAEd,KAAjB;AAAA,yBACE,QAAC,aAAD;AAAA,2BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAMEe,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF;AAQAxB,qBAAqB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\n\n// react-router-dom\nimport { BrowserRouter } from 'react-router-dom'\n\n// redux\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport reducer from './reducers'\nimport { Provider } from 'react-redux'\n\n// css\nimport 'semantic-ui-css/semantic.min.css';\n\nconst logger = store => next => action => {\n  console.group(action.type)\n  console.info('dispatching', action)\n  let result = next(action)\n  console.log('next state', store.getState())\n  console.groupEnd(action.type)\n  return result\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(\n  reducer,\n  composeEnhancers(\n    applyMiddleware(logger)\n  )\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n"]},"metadata":{},"sourceType":"module"}